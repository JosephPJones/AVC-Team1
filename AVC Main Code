#include <stdio.h>
#include <math.h>
#include <algorithm>
#include "E101.h"
using namespace std;
int whitepoints;
int lineCenter;

float updateCamera(int row){
	int maxBright = 0;
	int minBright = 0;
	int pixel[320];
	for(int step = 0; step < 320; step++){
		char p = get_pixel(row, step,3);
		maxBright = max(maxBright, (int)p);
		minBright = min(minBright, (int)p);
		pixel[step] = p;
	}
	int threshold = (maxBright - minBright) / 2;	
	int whitePoints = 0;
	int sum = 0;
	for(int step = 0; step < 320; step++){
		if (pixel[step] > threshold){
			set_pixel(row, step, 0, 128, 128);
			whitePoints++;
			sum += step;
		}
	}
	int lineCenter = 0;
	if (whitePoints > 0){lineCenter = ((sum/whitePoints) - 160.0)/160.0;}
}
void setMotors(float direction, int power){
	direction = min(max(direction, -1), 1);
	set_motor(1, power * min(1 + (2 * direction), (float)1));
	set_motor(2, power * min(1 - (2 * direction), (float)1));
	printf("kd: %f lc: %f rc: %f\n", kp,  min(1 + (2 * direction), (float)1), min(1 - (2 * direction), (float)1));
}
int main(){	
	float kd;
	float ki;
	float kd;
	int power = 128;
	open_screen_stream();
	for(int i = 0; i < 100; i++){
		take_picture();
		updateCamera(120);
		update_screen();
		kp = (lineCenter-160)/160;
		int firstPoint = lineCenter;
		updateCamera(60);
		kd = (lineCenter - firstPoint - 160)/160;
		setMotors(1.0*kp + 1.0*ki - 1.0*kd, 128);
		sleep1(0,100000);
	}
	stop(0);
	return 0;
}
